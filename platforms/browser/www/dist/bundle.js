!function(e){var o={};function t(n){if(o[n])return o[n].exports;var r=o[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=o,t.d=function(e,o,n){t.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:n})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="",t(t.s=1)}([function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var n=function(){function e(e){this.filters=e}return e.convertUnixDate=function(e){var o=new Date(1e3*e);return{day:o.getDate(),month:o.getMonth(),year:o.getUTCFullYear(),hour:o.getHours(),minutes:o.getMinutes(),seconds:o.getSeconds()}},e.prototype.getAllSMS=function(){SMS&&SMS.listSMS(this.filters,function(o){for(var t={},n=0;n<o.length;n++)if(o[n].address.length>7&&o[n].address.match("[0-9]+")){var r=e.convertUnixDate(o[n].date);if(t.hasOwnProperty(o[n].address))Object.defineProperty(t[o[n].address],o[n]._id,{value:{body:o[n].body,date:r}});else{String(o[n]._id);Object.defineProperty(t,o[n].address,{value:{"000":{body:o[n].body,date:r}}})}}console.log("contacts"),console.log(t)},function(e){console.log("error list sms: "+e)})},e.prototype.displaySMS=function(){},e}();o.SMSManager=n},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var n=t(0),r=function(){function e(){document.addEventListener("deviceready",this.onDeviceReady,!1)}return e.prototype.onDeviceReady=function(){console.log("The device is ready"),nodejs.channel.setListener(s),nodejs.start("main.js",c),console.log("localStorage"),console.log(localStorage),new n.SMSManager({box:"sent",maxCount:2e3}).getAllSMS()},e}();o.CordovaApp=r;new r;function s(e){console.log("[cordova] received:"+e)}function c(e){e?console.log(e):(console.log("Node.js Mobile Engine Started"),nodejs.channel.send("Hello from Cordova!"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,