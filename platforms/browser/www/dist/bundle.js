!function(e){var o={};function n(t){if(o[t])return o[t].exports;var i=o[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=o,n.d=function(e,o,t){n.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:t})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(o,"a",o),o},n.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},n.p="",n(n.s=0)}([function(e,o){({initialize:function(){document.addEventListener("deviceready",this.onDeviceReady.bind(this),!1)},onDeviceReady:function(){console.log("The device is ready");var e=window.SpeechRecognition;e.lang="fr-FR",e.continuous=!0,e.interimResults=!1,document.querySelector("#startSpeechRecognition").addEventListener("click",function(){console.log("le listener marche"),console.log(e),e.start()});var o=window.PushNotification.init({android:{},ios:{alert:"true",badge:!0,sound:"false"},windows:{}});o.on("registration",function(e){console.log(e.registrationId)}),o.on("notification",function(e){console.log(e.message),console.log(e.title),console.log(e.count),console.log(e.sound),console.log(e.image),console.log(e.additionalData)}),o.on("error",function(e){console.log(e.message)}),console.log(e),e.onresult=function(e){e.results.length>0&&console.log(e.results[0][0].transcript)}}}).initialize()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,